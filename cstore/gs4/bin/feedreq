#!/bin/sh
# -*- mode: shell-script -*-
# 
# Automatically generate a unified full text feed request for:
# 
# IIMP
# IIPA
# PRISMA
#
# (Add others as necessary)

ROOT="/dc/dsol"
SSROOT="${ROOT}/steadystate"
FTREQROOT="${SSROOT}/pqft/request"

IIMPSRC="${SSROOT}/src/iimp"
IIPASRC="${SSROOT}/src/iipa"

# Grab prisma ids from MySQL (use the prismaids python script)
# Grab IIMP DIDs from source
# Grab IIPA DIDs from source
# Concatenate all three sets of IDs
# Add EXTRA_IMPA ids.
# Sort and uniq the unified list of IDs
# Write the list out.

echo -n "Getting PRISMA IDs..." >&2
_cwd=`dirname $0`
PRISMAIDS=`${_cwd}/prismaids`
echo " Done" >&2

echo -n "Getting IIMP DIDs from XML..." >&2
IIMPDIDS=`find "${IIMPSRC}" -name '*.xml' -exec grep '<element name="DID">' {} \; | sed -e 's!.*<value>\(.*\)</value>.*!\1!'`
echo " Done" >&2

echo -n "Getting IIPA DIDs from XML..." >&2
IIPADIDS=`find "${IIPASRC}" -name '*.xml' -exec grep '<element name="DID">' {} \; | sed -e 's!.*<value>\(.*\)</value>.*!\1!'`
echo " Done" >&2

echo -n "Getting IIMP backfile IDs..." >&2
IIMPRIDS=`awk -F: '{print $2}' /packages/dsol/libdata/iimprids`
echo " Done" >&2

echo -n "Getting IIPA backfile IDs..." >&2
IIPARIDS=`awk -F: '{print $2}' /packages/dsol/libdata/iiparids`
echo " Done" >&2

echo -n "Getting other IMPA DIDs not in the XML..." >&2
EXTRA_IMPA=`awk '{print \$2}' ${SSROOT}/misc/impa_articleid_to_docid.list`
echo " Done" >&2

echo -n "Building unified list..." >&2
UNIFIED="$PRISMAIDS $IIMPDIDS $IIMPRIDS $IIPADIDS $IIPARIDS $EXTRA_IMPA"

TMPFILE="/tmp/pqftfeed_`today`.txt"
if [ -f ${TMPFILE} ]
then
    echo -n " (Removing stale tmp file)" >&2
    rm -f ${TMPFILE}
fi

for DID in ${UNIFIED}
do
    echo $DID >> ${TMPFILE}
done
echo " Done" >&2

echo -n "Sorting list and removing duplicates..." >&2
SORTED="${FTREQROOT}/unified/ch_pq_ids_`today`.txt"
sort -u ${TMPFILE} > ${SORTED}
rm -f "${TMPFILE}"
echo " Done" >&2

LINES=`wc -l "${SORTED}" | awk '{print $1}'`
echo "Found ${LINES} IDs." >&2
echo "List is in ${SORTED}" >&2

if [ "x${1}" = "x-u" ]
then
    `dirname $0`/scp_feed_list.exp ${SORTED}
fi
