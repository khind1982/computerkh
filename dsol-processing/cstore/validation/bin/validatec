#!/usr/local/bin/ruby
# -*- mode: ruby -*-

$LOAD_PATH.unshift '/packages/dsol/lib/ruby/1.9.1'
require 'splitter'
require 'socket'
require 'xml'
require 'base64'

class ValidationClient
  def initialize(args)
    @file_list = args
    @idxpath      = XML::XPath::Expression.new('//LegacyID')
    @minversxpath = XML::XPath::Expression.new('//MinorVersion')
    @docs_sent = 0
  end

  def validate_files
    @file_list.each do |file|
      Splitter.new(file, "</IngestRecord>\n").each_record do |rec|
        validate(rec)
      end
    end
  end

  private
  def validate(record)
    @xmldoc = XML::Document.string(record)
    @objid = xpath_content(@idxpath)
    @minvers ||= xpath_content(@minversxpath)
    print "#{@objid}: "
    talk_to_server(payload) {|response| puts response}
    @docs_sent += 1
    GC.start if @docs_sent.modulo(10_000) == 0
    puts @docs_sent
  end

  def payload
    "CHVSchemaName: VegaIngest.xsd
     CHVSchemaVersion: #{@minvers}
     CHVEncodedData: #{Base64.encode64(@xmldoc.to_s)}
     CHVPayloadEnd"
  end

  def xpath_content(expr)
    @xmldoc.find(expr).first.content
  end

  def talk_to_server(payload)
    v = TCPSocket.open('localhost', 12345)
    v.puts payload
    yield v.gets("\n")
  end
end

v = ValidationClient.new(ARGV)
v.validate_files
