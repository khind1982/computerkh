 d = defaultdict(list)
     ...: for n, elem in enumerate(data.xpath(".//summary")):
     ...:     closing_tags = sorted(
     ...:         [
     ...:             f"</{e.tag}>"
     ...:             for e in elem.xpath(".//ancestor::*")
     ...:             if e.tag not in ["html", "body", "doc", elem.tag]
     ...:         ],
     ...:         reverse=True,
     ...:     )
     ...:     opening_tags = [
     ...:         f"<{e.tag}>"
     ...:         for e in elem.xpath(".//ancestor::*")
     ...:         if e.tag not in ["html", "body", "doc", elem.tag]
     ...:     ]
     ...:     d[n].append(closing_tags)
     ...:     d[n].append(opening_tags)

In [75]: for num, summary in enumerate(data.xpath(".//summary")):
    ...:     if num in d.keys():
    ...:         existing_text = summary.text
    ...:         closing_tags = "".join(d[num][0])
    ...:         opening_tags = "".join(d[num][1])
    ...:         print(closing_tags)
    ...:         print(opening_tags)
    ...:         summary.text = f"{closing_tags}</nonapar><new_summary>{existing_text}</new_summary><no
    ...: napar>{opening_tags}"
    ...:         print(summary.text)

     text = et.tostring(data).decode()

     text = text.replace("&gt;", ">")
     text = text.replace("&lt;", "<")
     text = text.replace("<summary>", "")
     text = text.replace("</summary>", "")

     newtext = re.sub(r'booktype="Book Chapter">', 'booktype="Book Chapter"><nonapar>', text)
     newtext = re.sub(r'<div5 id="Z500061658">', '</nonapar><div5 id="Z500061658">', newtext)

     new_data = et.fromstring(newtext)
     

# To get the first and last anchor point for the opening and closing tags
In [12]: summary.xpath(".//ancestor::*")[1].xpath(".//preceding-sibling::*")[0]
Out[12]: <Element target at 0x7fa5802a52c0>

In [16]: summary.xpath(".//ancestor::*")[1].xpath(".//following-sibling::*")[-3]
Out[16]: <Element div5 at 0x7fa580290a80>
